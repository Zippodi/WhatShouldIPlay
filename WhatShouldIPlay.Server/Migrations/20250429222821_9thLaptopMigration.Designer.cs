// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WhatShouldIPlay.Server.Services;

#nullable disable

namespace WhatShouldIPlay.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250429222821_9thLaptopMigration")]
    partial class _9thLaptopMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SteamGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Genres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SteamID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserSteamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imageIconHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("recentPlaytime")
                        .HasColumnType("int");

                    b.Property<int>("totalPlayime")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SteamGames");
                });

            modelBuilder.Entity("WhatShouldIPlay.Server.Models.HeroModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ImageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Playstyles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Heroes");
                });

            modelBuilder.Entity("WhatShouldIPlay.Server.Models.HeroStatsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("HeroName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("HeroPlaytime")
                        .HasColumnType("float");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("heroId")
                        .HasColumnType("int");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("heroId");

                    b.HasIndex("userId");

                    b.ToTable("HeroStats");
                });

            modelBuilder.Entity("WhatShouldIPlay.Server.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("MarvelRivalsAccessTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MarvelRivalsUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SteamAccessTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SteamID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WhatShouldIPlay.Server.Models.HeroStatsModel", b =>
                {
                    b.HasOne("WhatShouldIPlay.Server.Models.HeroModel", "hero")
                        .WithMany()
                        .HasForeignKey("heroId");

                    b.HasOne("WhatShouldIPlay.Server.Models.UserModel", "user")
                        .WithMany()
                        .HasForeignKey("userId");

                    b.Navigation("hero");

                    b.Navigation("user");
                });
#pragma warning restore 612, 618
        }
    }
}
